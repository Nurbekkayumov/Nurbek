#include <iostream>
#include <vector>
#include <algorithm>
#include <fstream>


using namespace std;

struct Job {
    string title;
    string city;
    double salary;
};
void saveJobsToFile(const vector<Job>& jobs, string fileName) {
    ofstream outFile(fileName);
    
    if (!outFile) {
        cerr << "Unable to open output file: " << fileName << endl;
        return;
    }
    for (const auto& job : jobs) {
        outFile << job.title << "," << job.city << "," << job.salary << endl;
    }
    outFile.close();
    cout << "Successfully saved jobs to file: " << fileName << endl;
}


void searchJobByTitle(const vector<Job>& jobs, const string& title) {
    cout << "Bos oryn \"" << title << "\":" << std::endl;
    for (const auto& job : jobs) {
        if (job.title == title) {
            cout << "Title: " << job.title << endl;
            cout << "City: " << job.city << endl;
            cout << "Salary: " << job.salary << endl;
            cout << endl;
        }
    }
}


void sortJobsBySalary(std::vector<Job>& jobs, bool reverse = false) {
    if (reverse) {
        sort(jobs.begin(), jobs.end(), [](const Job& a, const Job& b) {
            return a.salary < b.salary;
            });
    }
    else {
        sort(jobs.begin(), jobs.end(), [](const Job& a, const Job& b) {
            return a.salary > b.salary;
            }
        );
    }
}

int main() {
    
    string Ast = "Astana.txt";
    string alm = "Almaty.txt";
    struct Vacancies {
        vector<Job> Astana;
        vector<Job> Almaty;
    };
    Vacancies vacancies = {
        {
            {"Engineer", "Astana", 150000},
            {"Analyst", "Astana", 120000},
            {"Satyshu", "Astana", 100000},
            {"Manager", "Astana", 200000},
            {"DevOps", "Astana", 180000},
            {"Product", "Astana", 220000},
            {"Designer", "Astana", 130000},
        },
        {
            {"Dariger", "Almaty", 140000},
            {"Qurylyshy", "Almaty", 110000},
            {"Terapevt", "Almaty", 90000},
            {"Teacher", "Almaty", 180000},
            {"Designer", "Almaty", 160000},
            {"Satyshu", "Almaty", 200000},
            {"Aspaz", "Almaty", 120000},
        }
    };

    
    cout << "Qalany tandanyz:" <<endl;
    cout << "1. Astana" << endl;
    cout << "2. Almaty" << endl;

    int cityChoice;
    cin >> cityChoice;

    
    vector<Job>* selectedJobs;
    if (cityChoice == 1) {
        selectedJobs = &vacancies.Astana;
    }
    else if (cityChoice == 2) {
        selectedJobs = &vacancies.Almaty;
    }
    else {
        cout << "Invalid choice. Exiting program." << endl;
        return 0;
    }

    
    bool d = false;
    int choice;
    while (!d)
    {

        cout << "Tanday jasanyz: \n";
        cout << "1. Barlyq jymus oryndaryn korsety" << endl;
        cout << "2. Jymustu tabu" << endl;
        cout << "3. Syruptay (kishiden ylkenge dein)" << endl;
        cout << "4. Syruptay (ylkennen kishige dein)" << endl;
        cout << "5. Barlyq oryndaryn filga saly "<< endl;
        cout << "6. Exit " << endl;
        cin >> choice;
        string title;
        switch (choice)
        {
        case 1:
            
            for (const auto& job : *selectedJobs) {
                cout << "Title: " << job.title << endl;
                cout << "City: " << job.city << endl;
                cout << "Salary: " << job.salary << endl;
                cout << endl;
            }
            break;
        case 2:
            
            cout << "Jymustyn atyn engiziniz:" << endl;

            cin >> title;
            searchJobByTitle(*selectedJobs, title);
            break;
        case 3:
            
            sortJobsBySalary(*selectedJobs);
            for (const auto& job : *selectedJobs) {
                cout << "Title: " << job.title << endl;
                cout << "City: " << job.city << endl;
                cout << "Salary: " << job.salary << endl;
                cout << endl;
            }
            break;
        case 4:
           
            sortJobsBySalary(*selectedJobs, true);
            for (const auto& job : *selectedJobs) {
                cout << "Title: " << job.title << endl;
                cout << "City: " << job.city << endl;
                cout << "Salary: " << job.salary << endl;
                cout << endl;
            }
            break;
        case 5:
            saveJobsToFile(vacancies.Astana, Ast);
            saveJobsToFile(vacancies.Almaty, alm);
            break;
        case 6:
            return 0;
            break;
        default:
            cout << "\n\nDurys tanday jasanyz!!!!!!\n" << endl;
            break;
        }
    }
    return 0;
}
